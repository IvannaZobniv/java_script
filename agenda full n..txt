0 пн
intro

1
log alert document.write let var разница const types number string boolean arr arr[i] obj obj.field obj[field] obj [] obj embeded obj typeof operators + - * / % () ++ -- ** cast to bool , to string, to number prompt  document.write
if else switch confirm = || ternary

2
looops + arrays +if for forof while itin loop in loop

3
functions return , void, arguments, fn call in fn,
function expression arrowFN

selfinvoke
hoist
рекурсия  (пример , функция - это робот, колбек - микрочип с программой)

4
String methods
array methods
callbacks

5
objects
ref vs primitives як їх змінює функція
add/delete fields,
func in objects, this
spred  rest  es6 syntax for create obj
fn constructors
classes extend
call apply bind extend in fnConctrucor
proto
closures function with get set fields of object

6
ПЕРЕЗАПИСАТЬ ВИДОСИК КАК У ДЕЦ21
DOM search
bytag,
search in current element children
byclass, id,
style
classlist
child,
node / element
querySelector
setAttribute
sibling /  sibling element
formsAPI

DOM Create
create element
 append / append child
DOM events
  onevent
  event listener
  event object  taget
  forms submit
  event preventDefault
  filtering,sorting
рекурсия в дом
  Показать как собрать данные с формы и отправить их в массив.
  Показать как следить за введением данных

7
fetch get post methods with our server
(одна урла але два входи, з одного ми пиатємо з іншого вставляємо данні)
json
regexp

идея:
запрос на /cars get  доступен всем.

запрос на /cars пост только с токеном.
запрос на /cars/1 update только с токеном.
запрос на /cars/1 delete только с токеном.

запрос на /login username+password  в ответ придет токен
сохранить Т в куки
создать форму для карс. валидировать через regexp формы & match


8 BOM
localstorage
cookie
сохранять токен в куки и все остальные запросы делать доставая оттуда
url + url params


9
ts як приклад взяти якесь дз з масивом та параметризувати його

10
setTimeout setInterval Async promises eloop (kmin)












